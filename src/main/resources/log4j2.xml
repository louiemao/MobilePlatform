<?xml version="1.0" encoding="UTF-8"?>
<!--级别优先级：OFF>FATAL>ERROR>WARN>INFO>DEBUG>TRACE>ALL-->
<configuration status="WARN" packages="org.apache.logging.log4j.core,com.getsentry.raven.log4j2">
    <!--<configuration status="WARN">-->
    <Properties>
        <Property name="baseDir">../logs/lxgl</Property>
    </Properties>
    <!--先定义所有的appender-->
    <appenders>
        <!--<Raven name="Sentry">-->
            <!--<dsn>-->
                <!--http://0aaafca1d9654d80a6f83a8d2d502b86:809f01c1ec28454dba5e33cf0a9386dd@169.24.2.82:9000/2?options-->
            <!--</dsn>-->
            <!--<tags>-->
                <!--&lt;!&ndash;version: 本地测试,tag:mao&ndash;&gt;-->
                <!--version: 测试版-->
                <!--&lt;!&ndash;version: 正式版&ndash;&gt;-->
            <!--</tags>-->
            <!--&lt;!&ndash;-->
            <!--Optional, allows to select the ravenFactory-->
            <!--&ndash;&gt;-->
            <!--&lt;!&ndash;-->
            <!--<ravenFactory>-->
            <!--com.getsentry.raven.DefaultRavenFactory-->
            <!--</ravenFactory>-->
            <!--&ndash;&gt;-->
            <!--<Filters>-->
                <!--&lt;!&ndash;只显示error级别的信息&ndash;&gt;-->
                <!--<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <!--</Filters>-->
        <!--</Raven>-->

        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--输出日志的格式-->
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </Console>


        <!--&lt;!&ndash;文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用&ndash;&gt;-->
        <!--<File name="log" fileName="../logs/subd_test.log" append="false">-->
        <!--<PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>-->
        <!--</File>-->


        <!--这个会打印出所有的信息，每次大小超过size,则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFile" fileName="${baseDir}/app.log"
                     filePattern="${baseDir}/app/$${date:yyyy-MM}/app-%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="24"/>
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="20"/>
            <Filters>
                <!--不显示error级别的信息-->
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>

        <RollingFile name="RollingFileError" fileName="${baseDir}/error.log"
                     filePattern="${baseDir}/error/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n"/>
            <SizeBasedTriggeringPolicy size="2 MB"/>
            <Filters>
                <!--只显示error级别的信息-->
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>

    </appenders>
    <!--然后定义logger,只有定义了logger并引入的appender,appender才会生效-->
    <loggers>
        <!--建立一个默认的root的logger-->
        <root level="debug">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFile"/>
            <appender-ref ref="RollingFileError"/>
            <!--<appender-ref ref="Sentry"/>-->
        </root>
        <!--<logger name="com.sws.subd.common.exception" level="error">-->
        <!--<appender-ref ref="Sentry"/>-->
        <!--</logger>-->
        <!--<logger name="com.sws.subd.test" level="info">-->
        <!--<appender-ref ref="Console"/>-->
        <!--</logger>-->
    </loggers>
</configuration>
