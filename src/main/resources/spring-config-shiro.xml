<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">

    <description>Shiro安全配置</description>
    <!-- 扫描service自动注入为bean -->
    <!--<context:component-scan base-package="com.sws.platformtform.mobile.security.service.impl"/>-->

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!--要求登录时的链接,非必须的属性, 默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="https://www.cas.com:8443/cas/login?service=https://localhost:9443/mobile/cas"/>
        <!--登录成功后要跳转的连接 这里用不到，跳转在controller里做了-->
        <property name="successUrl" value="/mobile"/>
        <!-- 用户访问未对其授权的资源时,所显示的连接 -->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filters">
            <util:map>
                <entry key="cas" value-ref="casFilter"/>
                <entry key="user" value-ref="userFilter"/>
                <entry key="forceLogout" value-ref="forceLogoutFilter"/>
            </util:map>
        </property>
        <!-- Shiro过滤链的定义 -->
        <!-- 此处可配合这篇文章来理解各个过滤连的作用 http://blog.csdn.net/jadyer/article/details/12172839 -->
        <!--下面value值的第一个'/'代表的路径是相对于 HttpServletRequest.getContextPath()的值来的 -->
        <!--anon：它对应的过滤器里面是空的,什么都没做, 这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
        <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器 org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
        <property name="filterChainDefinitions">
            <value>
                /druid/** = roles[developer]
                /static/** = anon
                /casFailure.jsp = anon
                /cas = cas
                /logout = logout
                /manageUsers=perms[user:manage]
                /** = forceLogout,user
            </value>
        </property>
    </bean>

    <!-- Realm实现 继承自AuthorizingRealm的自定义Realm, 即指定Shiro验证用户的认证和授权 -->
    <bean id="cpRealm" class="com.sws.platform.mobile.security.realm.CPRealm">
        <!--<property name="authenticationCachingEnabled" value="true"/>-->
        <!--<property name="authenticationCacheName" value="authenticationCache"/>-->
        <!--<property name="authorizationCachingEnabled" value="true"/>-->
        <!--<property name="authorizationCacheName" value="authorizationCache"/>-->
    </bean>
    <bean id="casRealm" class="com.sws.platform.mobile.security.realm.MyCasRealm">
        <!--<property name="cachingEnabled" value="true"/>-->
        <!--<property name="authenticationCachingEnabled" value="true"/>-->
        <!--<property name="authenticationCacheName" value="authenticationCache"/>-->
        <!--<property name="authorizationCachingEnabled" value="true"/>-->
        <!--<property name="authorizationCacheName" value="authorizationCache"/>-->
        <property name="casServerUrlPrefix" value="https://www.cas.com:8443/cas"/>
        <property name="casService" value="https://localhost:9443/mobile/cas"/>
    </bean>
    <bean id="cpNoPwdRealm" class="com.sws.platform.mobile.security.realm.CPNoPwdRealm"/>

    <!--<bean id="casRealm" class="org.apache.shiro.cas.CasRealm">-->
    <!--<property name="cachingEnabled" value="true"/>-->
    <!--<property name="authenticationCachingEnabled" value="true"/>-->
    <!--<property name="authenticationCacheName" value="authenticationCache"/>-->
    <!--<property name="authorizationCachingEnabled" value="true"/>-->
    <!--<property name="authorizationCacheName" value="authorizationCache"/>-->
    <!--<property name="defaultRoles" value="admin,user"/>-->
    <!--<property name="defaultPermissions" value="user:create,user:update"/>-->
    <!--<property name="roleAttributeNames" value="roles"/>-->
    <!--<property name="permissionAttributeNames" value="permissions"/>-->
    <!--<property name="casServerUrlPrefix" value="https://localhost:8443/chapter14-server"/>-->
    <!--<property name="casService" value="https://localhost:9443/chapter14-client/cas"/>-->
    <!--</bean>-->

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <!-- 30天 -->
        <property name="maxAge" value="2592000"/>
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="casRealm"/>
        <!--<property name="realms">-->
        <!--<list>-->
        <!--<ref bean="cpRealm"/>-->
        <!--<ref bean="cpNoPwdRealm"/>-->
        <!--</list>-->
        <!--</property>-->
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="subjectFactory" ref="casSubjectFactory"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>

    <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
        <property name="failureUrl" value="/casFailure.jsp"/>
    </bean>
    <bean id="forceLogoutFilter" class="com.sws.platform.mobile.security.filter.ForceLogoutFilter"/>
    <bean id="userFilter" class="com.sws.platform.mobile.security.filter.AjaxUserFilter"/>

    <!-- Shiro生命周期处理器 保证实现了Shiro内部lifecycle函数的bean执行; 起效权限注解,这个很少在web项目中用到,一般是控制url的访问,不是在controller中声明权限注解-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!--会话的全局过期时间（毫秒为单位），1小时-->
        <property name="globalSessionTimeout" value="3600000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehcacheManagerFactory"/>
    </bean>
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
    <!--<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>-->
    <!--</bean>-->

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!--<bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">-->
        <!--<property name="redisManager" ref="redisManager" />-->
    <!--</bean>-->
    <!--&lt;!&ndash; redisSessionDAO &ndash;&gt;-->
    <!--<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">-->
        <!--<property name="redisManager" ref="redisManager" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; shiro redisManager &ndash;&gt;-->
    <!--<bean id="redisManager" class="org.crazycake.shiro.RedisManager">-->
        <!--<property name="host" value="169.24.1.144"/>-->
        <!--<property name="port" value="6379"/>-->
        <!--<property name="expire" value="1800"/>-->
        <!--&lt;!&ndash; optional properties:-->
        <!--<property name="timeout" value="10000"/>-->
        <!--<property name="password" value="123456"/>-->
        <!--&ndash;&gt;-->
    <!--</bean>-->
</beans>